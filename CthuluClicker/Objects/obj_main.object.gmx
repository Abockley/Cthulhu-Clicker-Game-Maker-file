<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initializing values

//These values will change based on the room you're in
    //If you're setting down Cultists
    global.setCultist = 0;
    
//For Cultists
    //Cultist type i.e. 1 = kill 2 = herd etc.
    global.cultistType = 0;

//In game

    //How many people are currently on the screen
    global.people = 0;

    //Timer for adding a new person on scree
    // At the start of the game, a new person will pop up on screen every second
    global.peopleTimer = 0;
    global.peopleTimerMax = 60; 

    //Score count
    global.Score = 0;

    //Game Time, set for 1 minute for testing. Change second number to number of minutes you want
    global.gameTime = 3600*5;
    
    //Combo meter
    global.comboMeter = 0;
    global.comboMax = 100;
    global.comboLevel = 1;
    var comboFinisher;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls and setting cultists

//Control
global.touch = mouse_check_button_pressed(mb_left);

//Actually setting cultists

if (global.setCultist == 1)
{
    if keyboard_check_direct(ord('1')) 
        {global.cultistType = 1; instance_create(540,800,obj_cultist);}
    if keyboard_check_direct(ord('2')) 
        {global.cultistType = 2; instance_create(540,800,obj_cultist);}
    if keyboard_check_direct(ord('3')) 
        {global.cultistType = 3; instance_create(540,800,obj_cultist);}
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///room = rm_game
if (room == rm_game &amp;&amp; global.setCultist == 0)
{
    //General Mechanics
    
    //Game time
    global.gameTime-=1; 
    if (global.gameTime&lt;=0)
    {
        show_message("End of Game");
        game_restart();
    }
    
    //Combo meter shit
    if (global.comboLevel&gt;0) {global.comboMeter-=0.1*(global.comboLevel/3);}
    if (global.comboMeter&gt;100) {global.comboLevel+=1; global.comboMeter=30;}
    if (global.comboMeter&lt;0 &amp;&amp; global.comboLevel&gt;0) {global.comboLevel=1; global.comboMeter=0;}
    
    //Changing the variable peopleTimerMax based on combo meter
    if (global.comboLevel&gt;0) {global.peopleTimerMax = 50/(global.comboLevel/2);}
    
    
    //Spawn people
    global.peopleTimer+=1;
    if (global.peopleTimer &gt;=global.peopleTimerMax)
    {
        global.peopleTimer=0;
        instance_create(random_range(0,room_width),random_range(0,room_height),obj_person);
    }
    
    //Combo Finisher
    comboFinisher = keyboard_check_pressed(vk_space);
    
    if (global.comboLevel&gt;1 &amp;&amp; comboFinisher)
    {
        effect_create_above(ef_explosion,540,850,2,c_white);
        with (obj_person)
        {
            global.Score += 1*global.comboLevel;
            global.comboMeter += 20/(global.comboLevel/2);
            instance_destroy();
        }
        global.comboLevel = 1;
        global.comboMeter = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drawing Functions

// Set font for score

draw_set_font(fnt_score);

//Title screen
if (room == rm_menu)
{
    draw_text(240,50,'CTHULHU');
    draw_text(270,160,'CLICKER');
}

// Drawing Cultists

if (global.setCultist == 1)
{
    draw_sprite(spr_text,0,0,0);
}

// Drawing Score/time

if (room == rm_game)
{
    draw_text(room_width/2-10,0,global.Score);
    draw_text(0,1500,global.comboLevel);
    draw_healthbar(0,1650,1080,1700,global.comboMeter,c_black,c_red,c_green,0,true,false);
    
    draw_text(room_width/2,room_height - 200,ceil(global.gameTime/60));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
