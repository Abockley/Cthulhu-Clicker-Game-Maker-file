<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cultist</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initializing values

//Cultist's range

maxRange = 500;

//Settings-- 1=Attack, 2=Herd, 3=Slow

set = 2;

//Timer variables for attacks

time1 = 0;
maxtime1 = 120; //Time for delay between lightning strikes
time2 = 0;
maxtime2 = 9; //Time for lightning to happen

// Herding variables
herdLimit = 1;
herdCurrent = 0;
closest = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Kill

// Draws cultist in proper room
// NOTE: This means that the cultists are currently persistent. Inefficient, make sure to fix when/if mechanics are changed

if (room = rm_setCultist || room = rm_game)
{
    draw_self();
}

// Checks what setting the cultist is on and if they are in the game room

    // If setting 1, use lightning code
    // Checks that a person exists and that they're within the max range of the cultist
    // NOTE: make visible radius of cultist for player
    // Sets closest person into a variable
    // Runs through timer code so that it takes 2 seconds to use another lightning stike
    // And then takes 9 frames to use the lightning animation
    // After animation, destroys person and adds 1 to score

if (set = 1) &amp;&amp; (room = rm_game)
{
    if (instance_exists(obj_person) &amp;&amp; distance_to_object(obj_person)&lt;maxRange) //find the nearest person
    {
        closestPerson = instance_nearest(x,y,obj_person);
        
        // Timer Code
        
        if (time2 == 0)
        {
            time1+=1;
        }
        if (time1 == maxtime1)
        {
            time2+=1;
            if (time2&lt;maxtime2)
            {
                script_execute(scr_lightning,x,y,closestPerson.x,closestPerson.y);//Make lightning
            }
            if (time2 == maxtime2)
            {
                time1=0;
                time2=0;
                with(closestPerson)
                {
                    instance_destroy();
                    global.Score+=1;//Kill the nearest person, add 1 to your score
                }
            }
        }
    }
}

// Herding Attack
// Looks for closest person within range and checks if the current no. herded people exceed limit
// Adds to current no. herded, makes person move towards cultist

if (set = 2) &amp;&amp; (room = rm_game)
{
    if ((instance_exists(obj_person)) &amp;&amp; (distance_to_object(obj_person)&lt;maxRange) &amp;&amp; (herdCurrent != herdLimit)) //find the nearest person
    {
        herdCurrent ++;
        closest = instance_nearest(x,y,obj_person);
        selfx = x;
        selfy = y;
    }
    with(closest)
    {
        selfx = instance_nearest(x,y,obj_cultist).x; //locks in on the closest Cultist
        selfy = instance_nearest(x,y,obj_cultist).y;
        move_towards_point(selfx, selfy, 3);
    }
    if !(instance_exists(closest))
    {
        herdCurrent --;
    }
}

// Slowing Attack
// Any person that is in range gets their speed knocked down by 2.
// Range is half of max so that person speed can be reset to normal

if (set = 3) &amp;&amp; (room = rm_game)
{
    if (instance_exists(obj_person) &amp;&amp; distance_to_object(obj_person)&lt;maxRange/2) //find the nearest person
    {
        closest = instance_nearest(x,y,obj_person);
        with(closest)
        {
            speed = 2;
        }
    }
    else if (instance_exists(obj_person) &amp;&amp; distance_to_object(obj_person) &gt; maxRange/2)
    {
        with (obj_person)
        {
            if (distance_to_object(obj_cultist) &gt; 500/2)
            {
                speed = 5;
            }
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
